server {
    listen 80;
    server_name ${DOMAIN_NAME};
    
    # Перенаправление на HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Для Let's Encrypt
    location /.well-known/acme-challenge/ {
        root /usr/share/nginx/html;
    }
}

server {
    listen 443 ssl http2;
    server_name ${DOMAIN_NAME};

    # SSL-сертификаты
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    
    # Оптимальные настройки SSL
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384';
    ssl_session_timeout 1d;
    ssl_session_cache shared:SSL:50m;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # HSTS
    add_header Strict-Transport-Security "max-age=63072000; includeSubdomains; preload" always;
    
    # Другие заголовки безопасности
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    
    root /usr/share/nginx/html;
    index index.html;

    # Общие настройки
    charset utf-8;
    client_max_body_size 10M;

    # JavaScript модули и статические файлы
    location ~* \.js$ {
        add_header Content-Type "application/javascript" always;
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Другие статические файлы
    location ~* \.(jpg|jpeg|gif|png|css|ico|svg|woff|woff2|ttf|eot)$ {
        expires 30d;
        add_header Cache-Control "public, no-transform";
    }

    # Все статические файлы
    location / {
        try_files $uri $uri/ /index.html;
    }

    # Проксирование запросов к API бэкенда
    location /api/ {
        # Используем имя сервиса и внутренний порт контейнера
        proxy_pass http://backend:8000/api/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Настройки для WebSockets, если нужны
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }

    # Заголовки для работы с Telegram WebApp
    add_header 'Access-Control-Allow-Origin' 'https://t.me' always;
    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;

    # Обработка OPTIONS запросов (CORS)
    if ($request_method = 'OPTIONS') {
        add_header 'Access-Control-Allow-Origin' 'https://t.me' always;
        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;
        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range,Authorization' always;
        add_header 'Access-Control-Max-Age' 1728000;
        add_header 'Content-Type' 'text/plain charset=UTF-8';
        add_header 'Content-Length' 0;
        return 204;
    }

    # Логи
    access_log /var/log/nginx/access.log;
    error_log /var/log/nginx/error.log;
}
