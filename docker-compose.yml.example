version: '3.8'

services:
  backend:
    build: 
      context: ./backend
    restart: always
    ports:
      - "8001:8000"
    volumes:
      - ./backend:/app
      - ./logs:/app/logs
    depends_on:
      - db
      - redis
    environment:
      - POSTGRES_SERVER=db
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - REDIS_HOST=redis
      - SECRET_KEY=${SECRET_KEY}
      - ONEC_API_URL=${ONEC_API_URL}
      - ONEC_API_USER=${ONEC_API_USER}
      - ONEC_API_PASSWORD=${ONEC_API_PASSWORD}
      - TELEGRAM_BOT_TOKEN=${TELEGRAM_BOT_TOKEN}
    command: >
      sh -c "alembic upgrade head &&
             python scripts/init_data.py &&
             uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload"
    networks:
      - app-network

  frontend:
    image: nginx:alpine
    restart: always
    ports:
      - "8080:80"
    volumes:
      - ./frontend:/usr/share/nginx/html
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - app-network

  db:
    image: postgres:14
    restart: always
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db-init:/docker-entrypoint-initdb.d
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    ports:
      - "5434:5432"
    networks:
      - app-network

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app-network

volumes:
  postgres_data:
  redis_data:

networks:
  app-network:
    driver: bridge
